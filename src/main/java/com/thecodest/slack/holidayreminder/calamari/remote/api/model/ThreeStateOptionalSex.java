/*
 * Calamari API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * Contact: developers@calamari.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.thecodest.slack.holidayreminder.calamari.remote.api.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Objects;

/**
 * ThreeStateOptionalSex
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-06T15:14:15.923389380+02:00[Europe/Warsaw]")
public class ThreeStateOptionalSex {
	@SerializedName("value")
	private ValueEnum value = null;

	public ThreeStateOptionalSex value(ValueEnum value) {
		this.value = value;
		return this;
	}

	/**
	 * Get value
	 *
	 * @return value
	 **/
	@Schema(description = "")
	public ValueEnum getValue() {
		return value;
	}

	public void setValue(ValueEnum value) {
		this.value = value;
	}

	@Override
	public boolean equals(Object o) {
		if(this == o) {
			return true;
		}
		if(o == null || getClass() != o.getClass()) {
			return false;
		}
		ThreeStateOptionalSex threeStateOptionalSex = (ThreeStateOptionalSex) o;
		return Objects.equals(this.value, threeStateOptionalSex.value);
	}

	@Override
	public int hashCode() {
		return Objects.hash(value);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ThreeStateOptionalSex {\n");

		sb.append("    value: ").append(toIndentedString(value)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o) {
		if(o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Gets or Sets value
	 */
	@JsonAdapter(ValueEnum.Adapter.class)
	public enum ValueEnum {
		MALE("MALE"), FEMALE("FEMALE"), OTHER("OTHER"), NOT_SET("NOT_SET");

		private String value;

		ValueEnum(String value) {
			this.value = value;
		}

		public static ValueEnum fromValue(String input) {
			for(ValueEnum b : ValueEnum.values()) {
				if(b.value.equals(input)) {
					return b;
				}
			}
			return null;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<ValueEnum> {
			@Override
			public void write(final JsonWriter jsonWriter, final ValueEnum enumeration) throws IOException {
				jsonWriter.value(String.valueOf(enumeration.getValue()));
			}

			@Override
			public ValueEnum read(final JsonReader jsonReader) throws IOException {
				Object value = jsonReader.nextString();
				return ValueEnum.fromValue((String) (value));
			}
		}
	}

}
