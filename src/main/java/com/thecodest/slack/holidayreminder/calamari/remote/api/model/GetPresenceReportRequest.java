/*
 * Calamari API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * Contact: developers@calamari.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.thecodest.slack.holidayreminder.calamari.remote.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.util.Objects;

/**
 * GetPresenceReportRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-06T15:14:15.923389380+02:00[Europe/Warsaw]")
public class GetPresenceReportRequest {
	@SerializedName("dateFrom")
	private LocalDate dateFrom = null;

	@SerializedName("dateTo")
	private LocalDate dateTo = null;

	@SerializedName("page")
	private Integer page = null;

	@SerializedName("limit")
	private Integer limit = null;

	public GetPresenceReportRequest dateFrom(LocalDate dateFrom) {
		this.dateFrom = dateFrom;
		return this;
	}

	/**
	 * Start date of dates range to generate presence report in ISO format
	 *
	 * @return dateFrom
	 **/
	@Schema(example = "Tue Jan 10 01:00:00 CET 2017", required = true, description = "Start date of dates range to generate presence report in ISO format")
	public LocalDate getDateFrom() {
		return dateFrom;
	}

	public void setDateFrom(LocalDate dateFrom) {
		this.dateFrom = dateFrom;
	}

	public GetPresenceReportRequest dateTo(LocalDate dateTo) {
		this.dateTo = dateTo;
		return this;
	}

	/**
	 * End date of dates range to  generate presence report in ISO format
	 *
	 * @return dateTo
	 **/
	@Schema(example = "Sun Jan 15 01:00:00 CET 2017", required = true, description = "End date of dates range to  generate presence report in ISO format")
	public LocalDate getDateTo() {
		return dateTo;
	}

	public void setDateTo(LocalDate dateTo) {
		this.dateTo = dateTo;
	}

	public GetPresenceReportRequest page(Integer page) {
		this.page = page;
		return this;
	}

	/**
	 * Number of result page
	 * minimum: 0
	 *
	 * @return page
	 **/
	@Schema(example = "0", required = true, description = "Number of result page")
	public Integer getPage() {
		return page;
	}

	public void setPage(Integer page) {
		this.page = page;
	}

	public GetPresenceReportRequest limit(Integer limit) {
		this.limit = limit;
		return this;
	}

	/**
	 * Number of results returned in one request
	 * minimum: 1
	 * maximum: 100
	 *
	 * @return limit
	 **/
	@Schema(example = "100", required = true, description = "Number of results returned in one request")
	public Integer getLimit() {
		return limit;
	}

	public void setLimit(Integer limit) {
		this.limit = limit;
	}

	@Override
	public boolean equals(Object o) {
		if(this == o) {
			return true;
		}
		if(o == null || getClass() != o.getClass()) {
			return false;
		}
		GetPresenceReportRequest getPresenceReportRequest = (GetPresenceReportRequest) o;
		return Objects.equals(this.dateFrom, getPresenceReportRequest.dateFrom) && Objects.equals(this.dateTo, getPresenceReportRequest.dateTo) && Objects.equals(this.page, getPresenceReportRequest.page) && Objects.equals(this.limit, getPresenceReportRequest.limit);
	}

	@Override
	public int hashCode() {
		return Objects.hash(dateFrom, dateTo, page, limit);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class GetPresenceReportRequest {\n");

		sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
		sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
		sb.append("    page: ").append(toIndentedString(page)).append("\n");
		sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o) {
		if(o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
